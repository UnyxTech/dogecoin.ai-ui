pipeline {
    agent any

    environment {

        AWS_ACCESS_KEY_ID = credentials('aws-access-key-id')
        AWS_SECRET_ACCESS_KEY = credentials('aws-secret-access-key')
        GIT_CREDENTIALS = 'github-supertobby-token'
        WEBHOOK_URL = credentials('webhook-feishu-dev')
        S3_BUCKET = 'doge-website'
        S3_REGION = 'ap-southeast-1'
    }


    stages {
        stage('Install Dependencies') {
            steps {
                // 使用 pnpm 安装依赖
                sh 'pnpm install'
            }
        }

        stage('Build') {
            steps {
                // 使用 pnpm 进行构建
                sh 'pnpm  build'
            }
        }

        stage('Upload to S3') {
            steps {
                // 确保 aws cli 已安装，上传 dist 目录到 S3
                sh '''
                    aws s3 sync ./dist s3://$S3_BUCKET/ --region $S3_REGION
                '''
            }
        }


    }

    post {
        always {
            script {
                def buildStatus = currentBuild.currentResult
                def jobName = env.JOB_NAME
                def buildNumber = env.BUILD_NUMBER
                def buildTime = new Date().format("yyyy-MM-dd HH:mm:ss", TimeZone.getTimeZone('UTC'))

                def payload = """
                {
                    "msg_type": "post",
                    "content": {
                        "post": {
                            "zh_cn": {
                                "title": "jenkins build ",
                                "content": [
                                    [{
                                            "tag": "text",
                                            "text": "job: ${jobName}\\n"
                                        },
                                        {
                                            "tag": "text",
                                            "text": "status: ${buildStatus}\\n"
                                        },
                                        {
                                            "tag": "text",
                                            "text": "github branch: ${GIT_BRANCH}\\n"
                                        },
                                        {
                                            "tag": "text",
                                            "text": "time: ${buildTime}\\n"
                                        },
                                        {
                                            "tag": "text",
                                            "text": "number: ${buildNumber}\\n"
                                        }
                                    ]
                                ]
                            }
                        }
                    }
                }
                """
                httpRequest(
                    acceptType: 'APPLICATION_JSON',
                    contentType: 'APPLICATION_JSON',
                    httpMode: 'POST',
                    requestBody: payload,
                    url: WEBHOOK_URL
                )
            }
            cleanWs()
        }
    }
}
